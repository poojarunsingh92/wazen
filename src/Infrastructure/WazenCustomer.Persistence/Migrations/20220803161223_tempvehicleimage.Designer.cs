// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WazenCustomer.Persistence;

namespace WazenCustomer.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220803161223_tempvehicleimage")]
    partial class tempvehicleimage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CancellationRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IBANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PolicyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonforCancellation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerPolicyId");

                    b.ToTable("CancellationRequests");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishSecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishThirdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalIdTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("NewsLetterSubscription")
                        .HasColumnType("bit");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("int");

                    b.Property<int?>("SalutationId")
                        .HasColumnType("int");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YakeenLogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateOfBirthH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("familyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grandFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idIssuePlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseList11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("occupationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subtribeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalIdTypeId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("SalutationId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerOTP", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerifyCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CustomerOTPs");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalCoverageAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroundTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpgraded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyRequestRefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PremiumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceChargeAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PolicyTypeId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VehicleId");

                    b.ToTable("CustomerPolicies");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerPolicyAdditionalCoverage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalCoverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPolicyId");

                    b.ToTable("CustomerPolicyAdditionalCoverages");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerVehicle", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VehicleID");

                    b.ToTable("CustomerVehicles");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Driver", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChildrenBelow16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DNID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("HealthConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMainDriver")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseOwnYears")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalIssueId")
                        .HasColumnType("int");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("int");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrafficViolations")
                        .HasColumnType("bit");

                    b.Property<string>("WorkCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerVehicleId");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("MedicalIssueId");

                    b.HasIndex("OccupationId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.InsuranceCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankIdCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IBanNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InsuranceCompanies");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.MaritalStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MaritalStatuses");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.MedicalIssue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalIssueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MedicalIssues");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.NationalIdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NationalIdTypes");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Occupation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.PolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PolicyTypes");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Salutation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Salutations");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempCustomer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishSecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishThirdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalIdTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("NewsLetterSubscription")
                        .HasColumnType("bit");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("int");

                    b.Property<int?>("SalutationId")
                        .HasColumnType("int");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YakeenLogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateOfBirthH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("familyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grandFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idIssuePlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licenseList11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("occupationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subtribeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalIdTypeId");

                    b.HasIndex("OccupationId");

                    b.HasIndex("SalutationId");

                    b.ToTable("TempCustomers");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempDriver", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChildrenBelow16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DNID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("HealthConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMainDriver")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseOwnYears")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicalIssueId")
                        .HasColumnType("int");

                    b.Property<int?>("OccupationId")
                        .HasColumnType("int");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrafficViolations")
                        .HasColumnType("bit");

                    b.Property<string>("WorkCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerVehicleId");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("MedicalIssueId");

                    b.HasIndex("OccupationId");

                    b.ToTable("TempDrivers");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicle", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AverageDailyMileage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstimateValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncaseofTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredIDExpiry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnershipTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParkingGarage")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNumberCustomID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferOwnership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleMake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePlateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehiclePurposeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VehicleRegistrationExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleUsagePercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearofManufacture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VehiclePurposeId");

                    b.ToTable("TempVehicles");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicleImage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VehicleImages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("VehicleID");

                    b.ToTable("TempVehicleImages");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicleViolation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ViolationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ViolationTypeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VehicleID");

                    b.HasIndex("ViolationTypeId");

                    b.ToTable("TempVehicleViolations");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ICId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IcAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentGatewayResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDsc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WpAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AverageDailyMileage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstimateValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncaseofTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredIDExpiry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnershipTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParkingGarage")
                        .HasColumnType("bit");

                    b.Property<string>("RegistrationCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceNumberCustomID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPlateLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferOwnership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleMake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePlateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehiclePurposeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VehicleRegistrationExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleUsagePercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearofManufacture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("VehiclePurposeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.VehicleImage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VehicleImages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("VehicleID");

                    b.ToTable("VehicleImages");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.VehiclePurpose", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehiclePurposeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("VehiclePurposes");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.VehicleViolation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ViolationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ViolationTypeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VehicleID");

                    b.HasIndex("ViolationTypeId");

                    b.ToTable("VehicleViolations");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.ViolationType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ViolationTypes");
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CancellationRequest", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.CustomerPolicy", "CustomerPolicy")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Customer", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.NationalIdType", "NationalIdType")
                        .WithMany()
                        .HasForeignKey("NationalIdTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerPolicy", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WazenCustomer.Domain.Entities.PolicyType", "PolicyType")
                        .WithMany()
                        .HasForeignKey("PolicyTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WazenCustomer.Domain.Entities.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WazenCustomer.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerPolicyAdditionalCoverage", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.CustomerPolicy", "CustomerPolicy")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.CustomerVehicle", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WazenCustomer.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Driver", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("CustomerVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MedicalIssue", "MedicalIssue")
                        .WithMany()
                        .HasForeignKey("MedicalIssueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempCustomer", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.NationalIdType", "NationalIdType")
                        .WithMany()
                        .HasForeignKey("NationalIdTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempDriver", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.TempVehicle", "TempVehicle")
                        .WithMany()
                        .HasForeignKey("CustomerVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.MedicalIssue", "MedicalIssue")
                        .WithMany()
                        .HasForeignKey("MedicalIssueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicle", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.TempCustomer", "TempCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.VehiclePurpose", "vehiclePurpose")
                        .WithMany()
                        .HasForeignKey("VehiclePurposeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicleImage", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.TempVehicle", "TempVehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.TempVehicleViolation", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.TempVehicle", "TempVehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.ViolationType", "ViolationType")
                        .WithMany()
                        .HasForeignKey("ViolationTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.VehiclePurpose", "vehiclePurpose")
                        .WithMany()
                        .HasForeignKey("VehiclePurposeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.VehicleImage", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.TempVehicle", "TempVehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WazenCustomer.Domain.Entities.VehicleViolation", b =>
                {
                    b.HasOne("WazenCustomer.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WazenCustomer.Domain.Entities.ViolationType", "ViolationType")
                        .WithMany()
                        .HasForeignKey("ViolationTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
